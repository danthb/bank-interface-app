{"version":3,"file":"static/js/172.3a398f3d.chunk.js","mappings":"uOAIe,SAASA,IACpB,IAAQC,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAAtBF,OACR,GAAuBG,EAAAA,EAAAA,UAAS,IAAhC,eAAMC,EAAN,KAAYC,EAAZ,KACMC,EAAU,mCAAG,iGAETN,EAFS,gCAGYO,EAAAA,EAAAA,QAAmBP,EAAOQ,KAHtC,cAGLC,EAHK,yBAIJA,EAASC,MAJL,8DAOTC,QAAQC,IAAR,MAPS,4EAAH,qDAsBhB,OAVe,WACb,IAAIR,EACJE,IAAaO,MAAK,SAAAH,GAChBN,EAAOM,EAAK,GACVL,EAAQD,MAIdU,IAGI,SAAC,EAAAC,SAAD,WACI,iBAAKC,UAAU,mBAAf,WAEI,gBAAKA,UAAU,cAAf,UACI,4CAEJ,gBAAKA,UAAU,YAAf,UACA,mBAAOA,UAAU,QAAjB,WACI,4BACA,2BACI,eAAIC,MAAM,MAAV,mBACA,eAAIA,MAAM,MAAV,oBACA,eAAIA,MAAM,MAAV,+BACA,eAAIA,MAAM,MAAV,2BAGJ,2BAEIjB,IACA,2BACI,wBAAKI,EAAKc,QACV,wBAAKd,EAAKe,SACV,wBAAKf,EAAKgB,cACV,wBAAKhB,EAAKiB,qBAOtB,gBAAKL,UAAU,yBAAf,+B,4ECzDVM,E,QAAUC,EAAAA,QACVC,EAAQC,aAAaC,QAAQ,SAC7BC,EAAUC,IAAAA,OAAa,CACzBN,QAASA,EACTO,QAAS,CAAEC,cAAc,UAAD,OAAYN,MAGlCjB,EAAa,CACfwB,IAAK,kBAAMJ,EAAQK,IAAI,iBACvBC,QAAS,SAACC,GAAD,OAAgBP,EAAQK,IAAI,WAAY,CAAEG,OAAQ,CAAED,WAAYA,MACzEE,WAAY,SAAC1B,GAAD,OAAUiB,EAAQU,KAAK,kBAAmB3B,IACtD4B,QAAS,SAACC,EAAKC,GAAN,OAAiBb,EAAQc,IAAI,kBAAmB,CAACF,IAAKA,EAAKC,OAAQA","sources":["components/alldata.js","services/index.js"],"sourcesContent":["import React, { useState, Fragment,  useContext} from \"react\";\r\nimport { accountAPI } from \"../services\";\r\nimport { AuthContextFB } from \"../contexts/AuthContextFB\";\r\n\r\nexport default function AllData() {\r\n    const { authFB } = useContext(AuthContextFB);  \r\n    const[user, setUser] = useState('');\r\n    const getAccount = async () => {\r\n        try {\r\n          if (authFB) {\r\n            const response = await accountAPI.getUser(authFB.uid);\r\n            return response.data;\r\n          }\r\n          } catch (error) {\r\n              console.log(error);\r\n              return\r\n          }   \r\n      }\r\n    \r\n    const handle = () => {\r\n      let user;\r\n      getAccount().then(data => {\r\n        user = data[0];\r\n          setUser(user)\r\n      })\r\n    }\r\n    \r\n    handle();\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card text-center\">\r\n                \r\n                <div className=\"card-header\">\r\n                    <h5>User profile</h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                    <tr >\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Last transaction</th>\r\n                        <th scope=\"col\">Balance</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                    {\r\n                        authFB &&\r\n                        <tr >\r\n                            <td>{user.name}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{user.updated_at}</td>\r\n                            <td>{user.balance}</td>\r\n                        </tr>\r\n         \r\n                    }\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n                <div className=\"card-footer text-muted\">\r\n                Up to date\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n       \r\n    )\r\n}","import axios from 'axios';\r\nimport env from \"react-dotenv\";\r\n\r\nconst baseURL = env.API_URL\r\nconst token = localStorage.getItem('token')\r\nconst service = axios.create({\r\n    baseURL: baseURL,\r\n    headers: { authorization: `Bearer ${token}` },\r\n  })\r\n\r\nconst accountAPI = {\r\n    all: () => service.get('/account/all'),\r\n    getUser: (firebaseId) => service.get('/account', { params: { firebaseId: firebaseId} } ),\r\n    createUser: (data) => service.post('/account/create', data),\r\n    updated: (_id, amount) => service.put('/account/update', {_id: _id, amount: amount}),\r\n};\r\nexport { accountAPI };\r\n"],"names":["AllData","authFB","useContext","AuthContextFB","useState","user","setUser","getAccount","accountAPI","uid","response","data","console","log","then","handle","Fragment","className","scope","name","email","updated_at","balance","baseURL","env","token","localStorage","getItem","service","axios","headers","authorization","all","get","getUser","firebaseId","params","createUser","post","updated","_id","amount","put"],"sourceRoot":""}