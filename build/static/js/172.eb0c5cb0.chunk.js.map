{"version":3,"file":"static/js/172.eb0c5cb0.chunk.js","mappings":"6NAGe,SAASA,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,6GAEWC,EAAAA,EAAAA,MAFX,OAENC,EAFM,OAGZC,QAAQC,IAAIF,EAASL,MACrBC,EAAQI,EAASL,MAJL,gDAMZM,QAAQC,IAAR,MANY,yDAAH,qDASjBJ,MACD,KAEC,SAAC,EAAAK,SAAD,WACI,iBAAKC,UAAU,mBAAf,WAEI,gBAAKA,UAAU,cAAf,UACI,2CAEJ,gBAAKA,UAAU,YAAf,UACA,mBAAOA,UAAU,QAAjB,WACI,4BACA,2BACI,eAAIC,MAAM,MAAV,gBACA,eAAIA,MAAM,MAAV,mBACA,eAAIA,MAAM,MAAV,oBACA,eAAIA,MAAM,MAAV,0BACA,eAAIA,MAAM,MAAV,2BAGJ,2BAEIV,EAAKW,KAAI,SAACC,EAAMC,GAAP,OACT,2BACI,eAAIH,MAAM,MAAV,SAAiBG,EAAM,KACvB,wBAAKD,EAAKE,QACV,wBAAKF,EAAKG,SACV,wBAAKH,EAAKI,cACV,wBAAKJ,EAAKK,YALLJ,cAYjB,gBAAKJ,UAAU,yBAAf,+B,4EC/CVS,E,QAAUC,EAAAA,QACVC,EAAQC,aAAaC,QAAQ,SAC7BC,EAAUC,IAAAA,OAAa,CACzBN,QAASA,EACTO,QAAS,CAAEC,cAAc,UAAD,OAAYN,MAGlChB,EAAa,CACfuB,IAAK,kBAAMJ,EAAQK,IAAI,iBACvBC,QAAS,SAACb,GAAD,OAAgBO,EAAQK,IAAI,WAAY,CAAEE,OAAQ,CAAEd,WAAYA,MACzEe,WAAY,SAAC/B,GAAD,OAAUuB,EAAQS,KAAK,kBAAmBhC,IACtDiC,QAAS,SAACC,EAAKC,GAAN,OAAiBZ,EAAQa,IAAI,kBAAmB,CAACF,IAAKA,EAAKC,OAAQA","sources":["components/alldata.js","services/index.js"],"sourcesContent":["import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { accountAPI } from \"../services\";\r\n\r\nexport default function AllData() {\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        const getAccounts = async () => {\r\n            try {\r\n                const response = await accountAPI.all();\r\n                console.log(response.data);\r\n                setData(response.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }   \r\n        }\r\n        getAccounts();\r\n    }, [] );\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card text-center\">\r\n                \r\n                <div className=\"card-header\">\r\n                    <h5>Bank's Data</h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                    <tr >\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">FireBase_Id</th>\r\n                        <th scope=\"col\">Balance</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                    {\r\n                        data.map((item, key) => (\r\n                        <tr key={key}>\r\n                            <th scope=\"row\">{key + 1}</th>\r\n                            <td>{item.name}</td>\r\n                            <td>{item.email}</td>\r\n                            <td>{item.firebaseId}</td>\r\n                            <td>{item.balance}</td>\r\n                        </tr>\r\n                        ))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n                <div className=\"card-footer text-muted\">\r\n                Up to date\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n       \r\n    )\r\n}","import axios from 'axios';\r\nimport env from \"react-dotenv\";\r\n\r\nconst baseURL = env.API_URL\r\nconst token = localStorage.getItem('token')\r\nconst service = axios.create({\r\n    baseURL: baseURL,\r\n    headers: { authorization: `Bearer ${token}` },\r\n  })\r\n\r\nconst accountAPI = {\r\n    all: () => service.get('/account/all'),\r\n    getUser: (firebaseId) => service.get('/account', { params: { firebaseId: firebaseId} } ),\r\n    createUser: (data) => service.post('/account/create', data),\r\n    updated: (_id, amount) => service.put('/account/update', {_id: _id, amount: amount}),\r\n};\r\nexport { accountAPI };\r\n"],"names":["AllData","useState","data","setData","useEffect","getAccounts","accountAPI","response","console","log","Fragment","className","scope","map","item","key","name","email","firebaseId","balance","baseURL","env","token","localStorage","getItem","service","axios","headers","authorization","all","get","getUser","params","createUser","post","updated","_id","amount","put"],"sourceRoot":""}