{"version":3,"file":"static/js/181.d11608c0.chunk.js","mappings":"iPAKe,SAASA,IACtB,OAA6BC,EAAAA,EAAAA,UAAS,IAAtC,eAAMC,EAAN,KAAeC,EAAf,KACQC,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAAtBF,OAEFG,EAAU,mCAAG,iGAETH,EAFS,gCAGYI,EAAAA,EAAAA,QAAmBJ,EAAOK,KAHtC,cAGLC,EAHK,yBAIJA,EAASC,MAJL,8DAOTC,QAAQC,IAAR,MAPS,4EAAH,qDAYVC,EAAS,WACb,IAAIC,EACJR,IAAaS,MAAK,SAAAL,GAChBI,EAAOJ,EAAKM,QAAO,SAAAF,GAAI,OAAIA,EAAKG,aAAed,EAAOK,OACtDN,EAAWY,EAAK,GAAGb,aAMvB,OAFAY,KAGE,UAAC,EAAAK,SAAD,YACI,SAAC,IAAD,CACEC,QAAS,YACTC,MAAM,UACNC,SAAS,QACTC,OAAQ,mBACRC,MACE,wBACGtB,OAIT,gBAAKuB,MAAO,CAAEC,UAAW,UAAzB,UACA,kBAAOC,KAAK,SAAUC,MAAM,UAAUC,QAASf,W,4EC1C/CgB,E,QAAUC,EAAAA,QACVC,EAAQC,aAAaC,QAAQ,SAC7BC,EAAUC,IAAAA,OAAa,CACzBN,QAASA,EACTO,QAAS,CAAEC,cAAc,UAAD,OAAYN,MAGlCxB,EAAa,CACf+B,IAAK,kBAAMJ,EAAQK,IAAI,iBACvBC,QAAS,SAACvB,GAAD,OAAgBiB,EAAQK,IAAI,WAAY,CAAEE,OAAQ,CAAExB,WAAYA,MACzEyB,WAAY,SAAChC,GAAD,OAAUwB,EAAQS,KAAK,kBAAmBjC,IACtDkC,QAAS,SAACC,EAAKC,GAAN,OAAiBZ,EAAQa,IAAI,kBAAmB,CAACF,IAAKA,EAAKC,OAAQA","sources":["components/balance.js","services/index.js"],"sourcesContent":["import React, { Fragment, useContext, useState } from \"react\";\r\nimport { AuthContextFB } from \"../contexts/AuthContextFB\";\r\nimport {Card} from \"../contexts/context\";\r\nimport { accountAPI } from \"../services\";\r\n\r\nexport default function Balance() {\r\n  const[balance, setBalance] = useState('');\r\n  const { authFB } = useContext(AuthContextFB);\r\n  \r\n  const getAccount = async () => {\r\n      try {\r\n        if (authFB) {\r\n          const response = await accountAPI.getUser(authFB.uid);\r\n          return response.data;\r\n        }\r\n        } catch (error) {\r\n            console.log(error);\r\n            return\r\n        }   \r\n    }\r\n\r\n  const handle = () => {\r\n    let user;\r\n    getAccount().then(data => {\r\n      user = data.filter(user => user.firebaseId === authFB.uid)\r\n      setBalance(user[0].balance)\r\n    })\r\n  }\r\n\r\n  handle();\r\n\r\n  return (\r\n    <Fragment>\r\n        <Card\r\n          bgcolor={'lightblue'}\r\n          label=\"Balance\"\r\n          txtcolor='black'\r\n          header={'Your Balance is:'}\r\n          body={\r\n            <h3>\r\n              {balance}\r\n            </h3>\r\n          }\r\n      />\r\n      <div style={{ textAlign: 'center' }}>\r\n      <input type=\"button\"  value=\"Balance\" onClick={handle} />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n","import axios from 'axios';\r\nimport env from \"react-dotenv\";\r\n\r\nconst baseURL = env.API_URL\r\nconst token = localStorage.getItem('token')\r\nconst service = axios.create({\r\n    baseURL: baseURL,\r\n    headers: { authorization: `Bearer ${token}` },\r\n  })\r\n\r\nconst accountAPI = {\r\n    all: () => service.get('/account/all'),\r\n    getUser: (firebaseId) => service.get('/account', { params: { firebaseId: firebaseId} } ),\r\n    createUser: (data) => service.post('/account/create', data),\r\n    updated: (_id, amount) => service.put('/account/update', {_id: _id, amount: amount}),\r\n};\r\nexport { accountAPI };\r\n"],"names":["Balance","useState","balance","setBalance","authFB","useContext","AuthContextFB","getAccount","accountAPI","uid","response","data","console","log","handle","user","then","filter","firebaseId","Fragment","bgcolor","label","txtcolor","header","body","style","textAlign","type","value","onClick","baseURL","env","token","localStorage","getItem","service","axios","headers","authorization","all","get","getUser","params","createUser","post","updated","_id","amount","put"],"sourceRoot":""}